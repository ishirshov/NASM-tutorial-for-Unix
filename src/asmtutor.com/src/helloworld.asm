; Т.к. программа подгружается в конкретную область памяти, которую выделела ОС в конце
; выполнения программы необходимо выполнить корректный выход используя SYS_EXIT сигнал.
;
; В ином случае будет ошибка сегментации, т.к. выполнение перейдет в другую область памяти.
; Выполнение идет последовательно адрес за адресом, поэтому ядру Linux необходимо сообщить
; где конечная точка выхода. global _start - является точкой входа для исполнения.

SECTION .data
msg     db      'Hello World!', 0Ah

SECTION .text
global  _start

_start:

    mov edx, 13     ; количество байт для записи сообщения в STDOUT
    mov ecx, msg    ; адрес тела сообщения
    mov ebx, 1      ; ИД файла в системе - STDOUT
    mov eax, 4      ; вызвать SYS_WRITE (opcode ядра Линукс)
    int 80h

    mov ebx, 0      ; результат выполнения программы - 'Без ошибок'
    mov eax, 1      ; SYS_EXIT должен быть вызван в конце
    int 80h         ; иначе можно получить ошибку сегментации
